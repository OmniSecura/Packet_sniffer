STATISTICS:
1. pobieranie informacji pakiet√≥w (protok√≥≈Ç, ilo≈õƒá pakiet√≥w danego protoko≈Çu, 
                                src i dst ip (moge zrobiƒá te≈º po≈Çaczenia unikalne czyli ≈Çaczeenie dst i src w pary)
                                    rozmiar pakiet√≥w moge zrobiƒá np ≈õredni rozmiar pakie√ü√≥w itp
                                        Liczba pakiet√≥w na sekundƒô (PPS)
                                        Ilo≈õƒá danych na sekundƒô (B/s))
2. stworze sessions z .json w kt√≥rym bƒôdƒÖ siƒô zapisywac all time statystyki do wy≈õwwietlenia , ale te≈º osobno z danej sesji, 
te osobne zapisywa≈Çyby siƒô w formacie data godzina rozpoczƒôcia i zako≈Ñczenia 
3. wykres s≈Çupkowy
4. wykres liniowy
5. mapa po≈ÇƒÖcze≈Ñ ip
6. automatyczny dump do plik√≥w co np 60 sekund

üìä S≈Çupkowy (bar chart)
Liczba pakiet√≥w na protok√≥≈Ç 

Mo≈ºliwo≈õƒá wyboru trybu: z obecnej sesji / z all-time / z konkretnej daty

üìâ Liniowy (line chart)
Liczba pakiet√≥w w czasie (co sekundƒô / co 10 sek / co minuta)

Osobne linie dla TCP, UDP itd.

Wariant: wykres punktowy z jitterem (dla precyzyjnych sesji)

üó∫Ô∏è Mapa po≈ÇƒÖcze≈Ñ IP
Graficzne przedstawienie relacji IP-src ‚Üí IP-dst

Filtr, pod≈õwietla wpisane do filtru ip

Warianty:

Zwyk≈Çy wykres grafowy (nodes: IP, edges: po≈ÇƒÖczenia)

Lokalizacja geograficzna (GeoIP)



jak zrobiƒá staty:

-uruchomienie timera , w konstruktorze mainWindow a wy≈Çaczenie gdy wy≈ÇƒÖczymy nasz program.
- w handle packet:
  // 1) Liczba pakiet√≥w ca≈Çkowicie:
    stats_totalPackets++;
    stats_packetsLastInterval++;

    // 2) Bajty ca≈Çkowicie i w tym interwale:
    quint64 pktSize = static_cast<quint64>(raw.size());
    stats_totalBytes += pktSize;
    stats_bytesLastInterval += pktSize;

    // 3) Zliczanie po protoko≈Çach:
    stats_protoCounts[proto] += 1;

    // 4) Unikalne po≈ÇƒÖczenia src‚Üídst:
    QString srcIP = parts.value(0);
    QString dstIP = parts.value(1);
    stats_connections.insert(qMakePair(srcIP, dstIP));

// Parsery do zrobienia
Warstwa 2 (link layer)

ARP: done

Warstwa 3 (network layer)

IPv4 (ethertype 0x0800): done

IPv6 (ethertype 0x86DD): todo

ICMP (IPv4): done

IGMP: todo

EGP: todo

PIM: todo

RSVP: todo

OSPF (proto 89): todo

PUP: todo

IDP: todo

TP: todo

MTP: todo

Rozszerzenia/protoko≈Çy IPv6 (extension headers)

ICMPv6: todo

Hop-by-Hop Options (HOPOPTS): todo

Routing Header: todo

Fragment Header: todo

Destination Options (DSTOPTS): todo

Mobility Header (MH): todo

No Next Header (NONE): todo

Warstwa 4 (transport layer)

TCP: done

UDP: done

SCTP: todo

UDPLITE: todo

Tunelowanie / enkapsulacja

IPv4-in-IPv4 (IPIP, proto 4): todo

GRE: todo

L2TP: todo

MPLS-in-IP (proto 137): todo

ENCAP: todo

BEETPH: todo

Bezpiecze≈Ñstwo (IPsec i pokrewne)

Authentication Header (AH): todo

Encapsulating Security Payload (ESP): todo

Compression (COMP): todo

Pozosta≈Çe / inne

OTHER (wszystkie nieujƒôte numery protoko≈Ç√≥w): todo